<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ml on Home</title><link>https://antopolskiy.github.io/tags/ml/</link><description>Recent content in ml on Home</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 07 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://antopolskiy.github.io/tags/ml/index.xml" rel="self" type="application/rss+xml"/><item><title>Kickstart text classification with GPT-3, part 4</title><link>https://antopolskiy.github.io/post/gpt3_4/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://antopolskiy.github.io/post/gpt3_4/</guid><description>Intro In the previous part of the series, we set up an API to get predictions from GPT-3 programmatically. In this part, we will estimate the confidence of the predictions, and evaluate the accuracy of GPT-3 labelling.
Confidence &amp;ndash; or is it? Last time we finished with binary predictions &amp;ndash; TRUE or FALSE. But we can do better. We can gauge the confidence of the predictions. This confidence can be used in a variety of ways, for example, you might want to discard low-confidence predictions, or label them manually later.</description></item><item><title>Kickstart text classification with GPT-3, part 3</title><link>https://antopolskiy.github.io/post/gpt3_3/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://antopolskiy.github.io/post/gpt3_3/</guid><description>Into In the previous part we created a table-based prompt and got the completion in the form of TRUE / FALSE values for each of our samples and labels. In this post, we will automate this process.
What&amp;rsquo;s an API? API (Application Programming Interface) is a developer-friendly way to communicate programmatically with a particular service / application. APIs are usually used to automate actions and integrate services. API is the opposite of a visual GUI (Guided User Interface), which is what we normally use.</description></item><item><title>Kickstart text classification with GPT-3, part 2</title><link>https://antopolskiy.github.io/post/gpt3_2/</link><pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate><guid>https://antopolskiy.github.io/post/gpt3_2/</guid><description>Where we stopped In the previous part we finished with the desire to get predictions for multiple samples and multiple categories. We will do it here using a Markdown table format.
What is Markdown? Markdown is a lightweight markup language that you can use to add formatting elements to plaintext text documents. Created by John Gruber in 2004, Markdown is now one of the world’s most popular markup languages.
Basically, Markdown is a way to specify formatting in a plain text document, using special symbols.</description></item><item><title>Kickstart text classification with GPT-3, part 1</title><link>https://antopolskiy.github.io/post/gpt3_1/</link><pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate><guid>https://antopolskiy.github.io/post/gpt3_1/</guid><description>Motivation In the life of any data scientist there comes a point when they need to train a baseline classification model for some task, but don&amp;rsquo;t have labelled data to start. In this series of posts, I propose an approach to get labelled data for text classification using large pretrained neural networks, such as GPT-3. This approach will help you kickstart your classification problem.
TL;DR Gives a brief introduction to GPT-3; discusses a way to think about text completion; explains what is zero-shot, few-show classification and fine-tuning; introduces the example dataset that will be used in this series of posts; gives several examples of a naive approach to completion.</description></item></channel></rss>